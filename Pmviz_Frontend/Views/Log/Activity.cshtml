@{
    var processId = ViewData["processId"];
    string type = ViewData["type"] as string;
    IEnumerable<Pmviz_Frontend.Models.ActivityFreq> frequency = ViewData["Frequency"] as IEnumerable<Pmviz_Frontend.Models.ActivityFreq>;
    IEnumerable<Pmviz_Frontend.Models.ActivityFreq> median = ViewData["Median"] as IEnumerable<Pmviz_Frontend.Models.ActivityFreq>;
    IEnumerable<Pmviz_Frontend.Models.ActivityFreq> mean = ViewData["Mean"] as IEnumerable<Pmviz_Frontend.Models.ActivityFreq>;
}

@model IEnumerable<Pmviz_Frontend.Models.ActivityFreq>
@using Kendo.Mvc.UI
@{
    ViewData["Title"] = "Activity Statistics";
}


<div class="row">
    <div class="col-md-3 col-xl-3">
        <div class="card-box">
            <h4 class="text-dark my-1">Activities Statistics</h4>
            <form method="post" action='@Url.Action("Activity","Log", new {id = processId})'>
                @if (type == "frequency")
                {
                    <input type="submit" class="btn btn-primary" name="type" value="Frequency and duration" disabled>
                }
                else
                {
                    <input type="submit" class="btn btn-primary" name="type" value="Frequency and duration">
                }
                <br />
                <br />
                @if (type == "effort")
                {
                    <input type="submit" class="btn btn-primary" name="type" value="Effort" disabled>
                }
                else
                {
                    <input type="submit" class="btn btn-primary" name="type" value="Effort">
                }
            </form>
        </div>
    </div>
    <div class="col reload">
        @if (ViewBag.Error != null)
        {
            <div class="alert alert-danger" role="alert">
                @ViewBag.Error
            </div>
            <div class="container" style="text-align:center">
                <a href='@Url.Action("Index","Log")' class="btn btn-danger">Go Back</a>
            </div>
        }
        else
        {
            @if (type == "frequency" || type == "effort")
            {

                <div class="card-box">
                    <div class="container-fluid" style="text-align:center">
                        <button class="btn btn-primary" id="frequencyButton" type="button">Frequency</button>
                        <button class="btn btn-primary" id="medianButton" type="button">Median</button>
                        <button class="btn btn-primary" id="meanButton" type="button">Mean</button>
                    </div>
                    <br />
                    <div id="frequencyChart">
                        @(Html.Kendo().Chart(frequency)
                                .Name("chart")
                                .Legend(legend => legend
                                .Position(ChartLegendPosition.Top))
                                .Series(series =>
                                {
                                    series.Column(a => a.Frequency).Name("Frequency").CategoryField("Activity");
                                })
                                .CategoryAxis(axis => axis
                                    .Labels(labels => labels.Rotation(0))
                                    .MajorGridLines(lines => lines.Visible(true))
                                )
                                .ValueAxis(axis => axis
                                    .Labels(l => l.Visible(true))
                                    .Title("Frequency")
                                )
                            .Tooltip(tooltip => tooltip
                                .Visible(true)
                                .Template("#= series.name #: #= value #")
                            )
                            .ChartArea(x => x.Height(210))
                            .Pannable(pannable => pannable
                                .Lock(ChartAxisLock.Y)
                            )
                            .Zoomable(zoomable => zoomable
                                .Mousewheel(mousewheel => mousewheel.Lock(ChartAxisLock.Y))
                                .Selection(selection => selection.Lock(ChartAxisLock.Y))
                            )


                        )
                    </div>
                    <div id="medianChart">

                        @if (type == "effort")
                        {
                            @(Html.Kendo().Chart(median)
                            .Name("chart_median")
                            .Legend(legend => legend
                                .Position(ChartLegendPosition.Top))
                            .Series(series =>
                            {
                                series.Column(a => a.MedianInMinutes).Name("Median In Minutes").CategoryField("Activity");
                            })
                            .CategoryAxis(axis => axis
                                .Labels(labels => labels.Rotation(0))
                                .MajorGridLines(lines => lines.Visible(true))
                            )
                            .ValueAxis(axis => axis
                                .Labels(l => l.Visible(true))
                                .Title("Median Effort")
                            )
                            .Tooltip(tooltip => tooltip
                                .Visible(true)
                                .Template("#= dataItem.MedianActivityFormatted #")
                            )
                            .ChartArea(x => x.Height(210))
                            .Pannable(pannable => pannable
                                .Lock(ChartAxisLock.Y)
                            )
                            .Zoomable(zoomable => zoomable
                                .Mousewheel(mousewheel => mousewheel.Lock(ChartAxisLock.Y))
                                .Selection(selection => selection.Lock(ChartAxisLock.Y))
                            )
                            )
                        }
                        else
                        {
                            @(Html.Kendo().Chart(median)
                            .Name("chart_median")
                            .Legend(legend => legend
                                .Position(ChartLegendPosition.Top))
                            .Series(series =>
                            {
                                series.Column(a => a.MedianInMinutes).Name("Median In Minutes").CategoryField("Activity");
                            })
                            .CategoryAxis(axis => axis
                                .Labels(labels => labels.Rotation(0))
                                .MajorGridLines(lines => lines.Visible(true))
                            )
                            .ValueAxis(axis => axis
                                .Labels(l => l.Visible(true))
                                .Title("Median Duration")
                            )
                            .Tooltip(tooltip => tooltip
                                .Visible(true)
                                .Template("#= dataItem.MedianActivityFormatted #")
                            )
                            .ChartArea(x => x.Height(210))
                            .Pannable(pannable => pannable
                                .Lock(ChartAxisLock.Y)
                            )
                            .Zoomable(zoomable => zoomable
                                .Mousewheel(mousewheel => mousewheel.Lock(ChartAxisLock.Y))
                                .Selection(selection => selection.Lock(ChartAxisLock.Y))
                            )
                            )
                        }
                    </div>
                    <div id="meanChart">
                        @if (type == "effort")
                        {
                            @(Html.Kendo().Chart(mean)
                            .Name("chart_mean")
                            .Legend(legend => legend
                                .Position(ChartLegendPosition.Top))
                            .Series(series =>
                            {
                                series.Column(a => a.MeanInMinutes).Name("Mean In Minutes").CategoryField("Activity");
                            })
                            .CategoryAxis(axis => axis
                                .Labels(labels => labels.Rotation(0))
                                .MajorGridLines(lines => lines.Visible(true))
                            )
                            .ValueAxis(axis => axis
                                .Labels(l => l.Visible(true))
                                .Title("Mean Effort")
                            )
                            .Tooltip(tooltip => tooltip
                                .Visible(true)
                                .Template("#= dataItem.MeanActivityFormatted #")
                            )
                            .ChartArea(x => x.Height(210))
                            .Pannable(pannable => pannable
                                .Lock(ChartAxisLock.Y)
                            )
                            .Zoomable(zoomable => zoomable
                                .Mousewheel(mousewheel => mousewheel.Lock(ChartAxisLock.Y))
                                .Selection(selection => selection.Lock(ChartAxisLock.Y))
                            )
                            )
                        }
                        else
                        {
                            @(Html.Kendo().Chart(mean)
                            .Name("chart_mean")
                            .Legend(legend => legend
                                .Position(ChartLegendPosition.Top))
                            .Series(series =>
                            {
                                series.Column(a => a.MeanInMinutes).Name("Mean In Minutes").CategoryField("Activity");
                            })
                            .CategoryAxis(axis => axis
                                .Labels(labels => labels.Rotation(0))
                                .MajorGridLines(lines => lines.Visible(true))
                            )
                            .ValueAxis(axis => axis
                                .Labels(l => l.Visible(true))
                                .Title("Mean Duration")
                            )
                            .Tooltip(tooltip => tooltip
                                .Visible(true)
                                .Template("#= dataItem.MeanActivityFormatted #")
                            )
                            .ChartArea(x => x.Height(210))
                            .Pannable(pannable => pannable
                                .Lock(ChartAxisLock.Y)
                            )
                            .Zoomable(zoomable => zoomable
                                .Mousewheel(mousewheel => mousewheel.Lock(ChartAxisLock.Y))
                                .Selection(selection => selection.Lock(ChartAxisLock.Y))
                            )
                            )
                        }

                    </div>

                </div>
            }
        }

    </div>
</div>    
<br />



<div class="row">
    @if (type == "frequency" || type == "effort" && ViewBag.Error == null)
    {
        @if (Model != null)
        {
            <div class="table-responsive">
                <table id="scroll-horizontal-datatable" class="table table-dark dt-responsive nowrap w-100">
                    <thead>
                        <tr>
                            <th>Frequency</th>
                            @if (type == "frequency")
                            {
                                <th>Mean Duration</th>
                                <th>Median Duration</th>
                                <th>Minimum Duration</th>
                                <th>Maximum Duration</th>

                            }
                            else
                            {
                                <th>Mean Effort</th>
                                <th>Median Effort</th>
                                <th>Minimum Effort</th>
                                <th>Maximum Effort</th>

                            }

                            <th>Activity</th>
                            <th>Relative Frequency</th>
</thead>
                    <tbody>

                        @foreach (Pmviz_Frontend.Models.ActivityFreq a in Model)
                        {
                            <tr>
                                <td>@a.Frequency</td>
                                <td>@a.MeanActivityFormatted</td>
                                <td>@a.MedianActivityFormatted</td>
                                <td>@a.MinActivityFormatted</td>
                                <td>@a.MaxActivityFormatted</td>
                                <td>@a.Activity</td>
                                <td>@a.RelativeFrequency</td>
                            </tr>

                        }

                    </tbody>
                </table>
            </div>

            }
        }
    </div>



<script>

    
    $(document).ready(function () {


        var frequencyChart = document.getElementById("frequencyChart");
        var medianChart = document.getElementById("medianChart");
        var meanChart = document.getElementById("meanChart");
        var frequencyButton = document.getElementById("frequencyButton");
        var medianButton = document.getElementById("medianButton");
        var meanButton = document.getElementById("meanButton");

        medianChart.style.display = "none";
        meanChart.style.display = "none";
        frequencyButton.disabled = true;

        $("#frequencyButton").click(function () {
            frequencyButton.disabled = true;
            medianButton.disabled = false;
            meanButton.disabled = false;
            frequencyChart.style.display = "block";
            medianChart.style.display = "none";
            meanChart.style.display = "none";
        });

        $("#medianButton").click(function () {
            frequencyButton.disabled = false;
            medianButton.disabled = true;
            meanButton.disabled = false;
            frequencyChart.style.display = "none";
            medianChart.style.display = "block";
            meanChart.style.display = "none";
        });

        $("#meanButton").click(function () {
            frequencyButton.disabled = false;
            medianButton.disabled = false;
            meanButton.disabled = true;
            frequencyChart.style.display = "none";
            medianChart.style.display = "none";
            meanChart.style.display = "block";
        });
    });


</script>

<style>
    .demo-section {
        text-align: center;
    }

    .box .k-textbox {
        margin: 0;
        width: 80px;
    }




</style>
