@{
    var processId = ViewData["processId"];
    string type = ViewData["type"] as string;
    IEnumerable<Pmviz_Frontend.Models.ActivityFreq> frequency = ViewData["Frequency"] as IEnumerable<Pmviz_Frontend.Models.ActivityFreq>;
    IEnumerable<Pmviz_Frontend.Models.ActivityFreq> median = ViewData["Median"] as IEnumerable<Pmviz_Frontend.Models.ActivityFreq>;
    IEnumerable<Pmviz_Frontend.Models.ActivityFreq> mean = ViewData["Mean"] as IEnumerable<Pmviz_Frontend.Models.ActivityFreq>;
}

@model IEnumerable<Pmviz_Frontend.Models.ActivityFreq>
@using Kendo.Mvc.UI
@{
    ViewData["Title"] = "Activity Statistics";
}

<h4 style="text-align:center">Activities Statistics</h4>
<div class="container" style="text-align:center">
    <h6>Choose the type of statistics:</h6>
</div>
<div class="container" style="text-align:center">
    <form method="post" action='@Url.Action("Activity","Log", new {id = processId})'>
        @if (type == "frequency")
        {
            <input type="radio" name="type" value="frequency" checked>
        }
        else
        {
            <input type="radio" name="type" value="frequency">
        }
        <label for="frequency">Activities Frequency and Duration</label>
        &nbsp;&nbsp;&nbsp;
        @if (type == "effort")
        {
            <input type="radio" name="type" value="effort" checked>
        }
        else
        {
            <input type="radio" name="type" value="effort">
        }
        <label for="effort">Activities Effort</label>
        <div>
            <button class="k-button k-primary" type="submit">Submit</button>
        </div>
    </form>
</div>
<br />


@if (ViewBag.Error != null)
{
    <div class="alert alert-danger" role="alert">
        @ViewBag.Error
    </div>
    <div class="container" style="text-align:center">
        <a href='@Url.Action("Index","Log")' class="btn btn-danger">Go Back</a>
    </div>
}
else
{
    if (type == "frequency" || type == "effort")
    {
        <div class="box">
            <div class="box-col" style="text-align:center">
                @if (type == "frequency")
                {
                    <h5>Activity Frequency and Duration</h5>
                }
                else
                {
                    <h5>Activity Effort</h5>

                }
                <button class="k-button" id="frequencyButton" type="button">Frequency</button>
                <button class="k-button" id="medianButton" type="button">Median</button>
                <button class="k-button" id="meanButton" type="button">Mean</button>
            </div>
        </div>
        <br />
        <div id="frequencyChart">
            @(Html.Kendo().Chart(frequency)
                        .Name("chart")
                        .Legend(legend => legend
                        .Position(ChartLegendPosition.Top))
                        .Series(series =>
                        {
                            series.Column(a => a.Frequency).Name("Frequency").CategoryField("Activity");
                        })
                        .CategoryAxis(axis => axis
                            .Labels(labels => labels.Rotation(-60))
                            .MajorGridLines(lines => lines.Visible(true))
                        )
                        .ValueAxis(axis => axis
                            .Labels(l => l.Visible(true))
                            .Title("Frequency")
                        )
                    .Tooltip(tooltip => tooltip
                        .Visible(true)
                        .Template("#= series.name #: #= value #")
                    )
            )
        </div>
        <div id="medianChart">

            @if (type == "effort")
            {
                @(Html.Kendo().Chart(median)
                    .Name("chart_median")
                    .Legend(legend => legend
                        .Position(ChartLegendPosition.Top))
                    .Series(series =>
                    {
                        series.Column(a => a.MedianInMinutes).Name("Median In Minutes").CategoryField("Activity");
                    })
                    .CategoryAxis(axis => axis
                        .Labels(labels => labels.Rotation(-60))
                        .MajorGridLines(lines => lines.Visible(true))
                    )
                    .ValueAxis(axis => axis
                        .Labels(l => l.Visible(true))
                        .Title("Median Effort")
                    )
                    .Tooltip(tooltip => tooltip
                        .Visible(true)
                        .Template("#= dataItem.MedianActivityFormatted #")
                    )
            )
            }
            else
            {
                @(Html.Kendo().Chart(median)
                    .Name("chart_median")
                    .Legend(legend => legend
                        .Position(ChartLegendPosition.Top))
                    .Series(series =>
                    {
                        series.Column(a => a.MedianInMinutes).Name("Median In Minutes").CategoryField("Activity");
                    })
                    .CategoryAxis(axis => axis
                        .Labels(labels => labels.Rotation(-60))
                        .MajorGridLines(lines => lines.Visible(true))
                    )
                    .ValueAxis(axis => axis
                        .Labels(l => l.Visible(true))
                        .Title("Median Duration")
                    )
                    .Tooltip(tooltip => tooltip
                        .Visible(true)
                        .Template("#= dataItem.MedianActivityFormatted #")
                    )
            )
            }
        </div>
        <div id="meanChart">
            @if (type == "effort")
            {
                @(Html.Kendo().Chart(mean)
                    .Name("chart_mean")
                    .Legend(legend => legend
                        .Position(ChartLegendPosition.Top))
                    .Series(series =>
                    {
                        series.Column(a => a.MeanInMinutes).Name("Mean In Minutes").CategoryField("Activity");
                    })
                    .CategoryAxis(axis => axis
                        .Labels(labels => labels.Rotation(-60))
                        .MajorGridLines(lines => lines.Visible(true))
                    )
                    .ValueAxis(axis => axis
                        .Labels(l => l.Visible(true))
                        .Title("Mean Effort")
                    )
                    .Tooltip(tooltip => tooltip
                        .Visible(true)
                        .Template("#= dataItem.MeanActivityFormatted #")
                    )
            )
            }
            else
            {
                @(Html.Kendo().Chart(mean)
                    .Name("chart_mean")
                    .Legend(legend => legend
                        .Position(ChartLegendPosition.Top))
                    .Series(series =>
                    {
                        series.Column(a => a.MeanInMinutes).Name("Mean In Minutes").CategoryField("Activity");
                    })
                    .CategoryAxis(axis => axis
                        .Labels(labels => labels.Rotation(-60))
                        .MajorGridLines(lines => lines.Visible(true))
                    )
                    .ValueAxis(axis => axis
                        .Labels(l => l.Visible(true))
                        .Title("Mean Duration")
                    )
                    .Tooltip(tooltip => tooltip
                        .Visible(true)
                        .Template("#= dataItem.MeanActivityFormatted #")
                    )
            )
            }

        </div>

        <div class="container k-content" style="height:auto">

            @(Html.Kendo().Grid(Model)
                    .Name("Grid")
                    .Columns(columns =>
                    {
                        columns.Bound(l => l.Frequency).Title("Frequency").Width(130);
                        columns.Bound(l => l.MeanActivityFormatted).Title("Mean Duration").Width(130);
                        columns.Bound(l => l.MedianActivityFormatted).Title("Median Duration").Width(130);
                        columns.Bound(l => l.MinActivityFormatted).Title("Min Duration").Width(130);
                        columns.Bound(l => l.MaxActivityFormatted).Title("Max Duration").Width(130);
                        columns.Bound(l => l.Activity).Title("Activity").Width(130);
                        columns.Bound(l => l.RelativeFrequency).Title("Relative Frequency").Width(130);
                    })
                    .Pageable()
                    .Navigatable()
                    .Sortable()
                    .Groupable()
                    .Filterable()
                    .Scrollable(s => s.Height("auto"))
                    .DataSource(dataSource => dataSource
                        .Ajax()
                        .PageSize(20)
                        .ServerOperation(false)
                        )
                    .Resizable(resize => resize.Columns(true))
                    .HtmlAttributes(new { style = "width:1000px" })
            )

        </div>



    }
}

<script>
    $(document).ready(function () {
        var frequencyChart = document.getElementById("frequencyChart");
        var medianChart = document.getElementById("medianChart");
        var meanChart = document.getElementById("meanChart");
        var frequencyButton = document.getElementById("frequencyButton");
        var medianButton = document.getElementById("medianButton");
        var meanButton = document.getElementById("meanButton");

        medianChart.style.display = "none";
        meanChart.style.display = "none";
        frequencyButton.disabled = true;

        $("#frequencyButton").click(function () {
            frequencyButton.disabled = true;
            medianButton.disabled = false;
            meanButton.disabled = false;
            frequencyChart.style.display = "block";
            medianChart.style.display = "none";
            meanChart.style.display = "none";
        });

        $("#medianButton").click(function () {
            frequencyButton.disabled = false;
            medianButton.disabled = true;
            meanButton.disabled = false;
            frequencyChart.style.display = "none";
            medianChart.style.display = "block";
            meanChart.style.display = "none";
        });

        $("#meanButton").click(function () {
            frequencyButton.disabled = false;
            medianButton.disabled = false;
            meanButton.disabled = true;
            frequencyChart.style.display = "none";
            medianChart.style.display = "none";
            meanChart.style.display = "block";
        });
    });

</script>

<style>
    .demo-section {
        text-align: center;
    }

    .box .k-textbox {
        margin: 0;
        width: 80px;
    }
</style>
