@{
    var processId = ViewData["processId"];
    string type = ViewData["type"] as string;
    IEnumerable<Pmviz_Frontend.Models.ActivityFreq> frequency = ViewData["Frequency"] as IEnumerable<Pmviz_Frontend.Models.ActivityFreq>;
    IEnumerable<Pmviz_Frontend.Models.ActivityFreq> median = ViewData["Median"] as IEnumerable<Pmviz_Frontend.Models.ActivityFreq>;
    IEnumerable<Pmviz_Frontend.Models.ActivityFreq> mean = ViewData["Mean"] as IEnumerable<Pmviz_Frontend.Models.ActivityFreq>;
    IEnumerable<Pmviz_Frontend.Models.ActivityEffort> workTime = ViewData["WorkTime"] as IEnumerable<Pmviz_Frontend.Models.ActivityEffort>;
    IEnumerable<Pmviz_Frontend.Models.ActivityOperational> operationalTime = ViewData["OperationalTime"] as IEnumerable<Pmviz_Frontend.Models.ActivityOperational>;

}

@model IEnumerable<Pmviz_Frontend.Models.ActivityFreq>
@using Kendo.Mvc.UI
@{
    ViewData["Title"] = "Atividades";
}


<div class="row">
    <div class="col-md-3 col-xl-3">
        <div class="card-box">
            <h4 class="text-dark my-1">Estatísticas de Atividades</h4>
            <form method="post" action='@Url.Action("Activity","Log", new {id = processId})'>
                @if (type == "frequency")
                {
                    <input type="radio" class="btn btn-primary" name="type" value="frequency" checked>
                }
                else
                {
                    <input type="radio" class="btn btn-primary" name="type" value="frequency" onclick="handle(this);">
                }
                <label for="frequency">Frequência e duração</label>
                <br />
                @if (type == "effort")
                {
                    <input type="radio" class="btn btn-primary" name="type" value="effort" checked>
                }
                else
                {
                    <input type="radio" class="btn btn-primary" name="type" value="effort" onclick="handle(this);">
                }
                <label for="effort">Tempo de Trabalho</label>
                <br />
                @if (type == "operational")
                {
                    <input type="radio" class="btn btn-primary" name="type" value="operational" checked>
                }
                else
                {
                    <input type="radio" class="btn btn-primary" name="type" value="operational" onclick="handle(this);">
                }
                <label for="effort">Tempo Operacional</label>
                <button type="submit" id="send" hidden></button>
            </form>

        </div>
    </div>
    <div class="col reload">
        @if (ViewBag.Error != null)
        {
            <div class="alert alert-danger" role="alert">
                @ViewBag.Error
            </div>
            <div class="container" style="text-align:center">
                <a href='@Url.Action("Index","Log")' class="btn btn-danger">Voltar</a>
            </div>
        }
        else
        {
            @if (type == "frequency" || type == "effort" || type == "operational")
            {

    <div class="card-box">
        @if (type == "frequency")
        {
            <div class="container-fluid" style="text-align:center">
                <button class="btn btn-primary" id="frequencyButton" type="button">Frequência</button>
                <button class="btn btn-primary" id="medianButton" type="button">Mediana</button>
                <button class="btn btn-primary" id="meanButton" type="button">Média</button>
            </div>


            <br />
            <div id="frequencyChart">
                @(Html.Kendo().Chart(frequency)
                            .Name("chart")
                            .Legend(legend => legend
                            .Position(ChartLegendPosition.Top))
                            .Series(series =>
                            {
                                series.Column(a => a.Frequency).Name("Frequência").CategoryField("Activity");
                            })
                            .CategoryAxis(axis => axis
                                .Labels(labels => labels.Rotation(0))
                                .MajorGridLines(lines => lines.Visible(true))
                            )
                            .ValueAxis(axis => axis
                                .Labels(l => l.Visible(true))
                                .Title("Frequência")
                            )
                        .Tooltip(tooltip => tooltip
                            .Visible(true)
                            .Template("#= series.name #: #= value #")
                        )
                        .ChartArea(x => x.Height(210))
                        .Pannable(pannable => pannable
                            .Lock(ChartAxisLock.Y)
                        )
                        .Zoomable(zoomable => zoomable
                            .Mousewheel(mousewheel => mousewheel.Lock(ChartAxisLock.Y))
                            .Selection(selection => selection.Lock(ChartAxisLock.Y))
                        )


                )
            </div>
            <div id="medianChart">
                @(Html.Kendo().Chart(median)
                    .Name("chart_median")
                    .Legend(legend => legend
                        .Position(ChartLegendPosition.Top))
                    .Series(series =>
                    {
                        series.Column(a => a.MedianInMinutes).Name("Mediana em Minutos").CategoryField("Activity");
                    })
                    .CategoryAxis(axis => axis
                        .Labels(labels => labels.Rotation(0))
                        .MajorGridLines(lines => lines.Visible(true))
                    )
                    .ValueAxis(axis => axis
                        .Labels(l => l.Visible(true))
                        .Title("Mediana")
                    )
                    .Tooltip(tooltip => tooltip
                        .Visible(true)
                        .Template("#= dataItem.MedianActivityFormatted #")
                    )
                    .ChartArea(x => x.Height(210))
                    .Pannable(pannable => pannable
                        .Lock(ChartAxisLock.Y)
                    )
                    .Zoomable(zoomable => zoomable
                        .Mousewheel(mousewheel => mousewheel.Lock(ChartAxisLock.Y))
                        .Selection(selection => selection.Lock(ChartAxisLock.Y))
                    )
                )

            </div>
            <div id="meanChart">
                @(Html.Kendo().Chart(mean)
                .Name("chart_mean")
                .Legend(legend => legend
                    .Position(ChartLegendPosition.Top))
                .Series(series =>
                {
                    series.Column(a => a.MeanInMinutes).Name("Média em Minutos").CategoryField("Activity");
                })
                .CategoryAxis(axis => axis
                    .Labels(labels => labels.Rotation(0))
                    .MajorGridLines(lines => lines.Visible(true))
                )
                .ValueAxis(axis => axis
                    .Labels(l => l.Visible(true))
                    .Title("Média")
                )
                .Tooltip(tooltip => tooltip
                    .Visible(true)
                    .Template("#= dataItem.MeanActivityFormatted #")
                )
                .ChartArea(x => x.Height(210))
                .Pannable(pannable => pannable
                    .Lock(ChartAxisLock.Y)
                )
                .Zoomable(zoomable => zoomable
                    .Mousewheel(mousewheel => mousewheel.Lock(ChartAxisLock.Y))
                    .Selection(selection => selection.Lock(ChartAxisLock.Y))
                )
                )

            </div>
        }
        @if (type == "effort")
        {
            <div>
                @(Html.Kendo().Chart(workTime)
                    .Name("chart_work")
                    .Legend(legend => legend
                        .Position(ChartLegendPosition.Top))
                    .Series(series =>
                    {
                        series.Column(a => a.TotalWorkHoursMillis).Name("Tempo de Trabalho em Minutos").CategoryField("Activity");
                    })
                    .CategoryAxis(axis => axis
                        .Labels(labels => labels.Rotation(0))
                        .MajorGridLines(lines => lines.Visible(true))
                    )
                    .ValueAxis(axis => axis
                        .Labels(l => l.Visible(true))
                        .Title("Tempo de Trabalho")
                    )
                    .Tooltip(tooltip => tooltip
                        .Visible(true)
                        .Template("#= series.name #: #= value # minutos")
                    )
                    .ChartArea(x => x.Height(210))
                    .Pannable(pannable => pannable
                        .Lock(ChartAxisLock.Y)
                    )
                    .Zoomable(zoomable => zoomable
                        .Mousewheel(mousewheel => mousewheel.Lock(ChartAxisLock.Y))
                        .Selection(selection => selection.Lock(ChartAxisLock.Y))
                    )
                )

            </div>
        }
        @if (type == "operational")
        {
            <div>
                @(Html.Kendo().Chart(operationalTime)
                    .Name("chart_op")
                    .Legend(legend => legend
                        .Position(ChartLegendPosition.Top))
                    .Series(series =>
                    {
                        series.Column(a => a.TotalOperationalHoursMillis).Name("Tempo Operacional em Minutos").CategoryField("Activity");
                    })
                    .CategoryAxis(axis => axis
                        .Labels(labels => labels.Rotation(0))
                        .MajorGridLines(lines => lines.Visible(true))
                    )
                    .ValueAxis(axis => axis
                        .Labels(l => l.Visible(true))
                        .Title("Tempo Operacional")
                    )
                    .Tooltip(tooltip => tooltip
                        .Visible(true)
                        .Template("#= series.name #: #= value # minutos")
                    )
                    .ChartArea(x => x.Height(210))
                    .Pannable(pannable => pannable
                        .Lock(ChartAxisLock.Y)
                    )
                    .Zoomable(zoomable => zoomable
                        .Mousewheel(mousewheel => mousewheel.Lock(ChartAxisLock.Y))
                        .Selection(selection => selection.Lock(ChartAxisLock.Y))
                    )
                )

            </div>
        }
    </div>
            }
        }

    </div>
</div>    
<br />



<div class="row">
    @if (type == "frequency" && ViewBag.Error == null)
    {
        @if (Model != null)
        {
            <div class="table-responsive">
                <table id="scroll-horizontal-datatable" class="table table-dark dt-responsive nowrap w-100">
                    <thead>
                        <tr>
                            <th>Frequência</th>
                            <th>Média</th>
                            <th>Mediana</th>
                            <th>Duração Mínima</th>
                            <th>Duração Máxima</th>
                            <th>Atividade</th>
                            <th>Frequência Relativa</th>
</thead>
                    <tbody>

                        @foreach (Pmviz_Frontend.Models.ActivityFreq a in Model)
                        {
                            <tr>
                                <td>@a.Frequency</td>
                                <td>@a.MeanActivityFormatted</td>
                                <td>@a.MedianActivityFormatted</td>
                                <td>@a.MinActivityFormatted</td>
                                <td>@a.MaxActivityFormatted</td>
                                <td>@a.Activity</td>
                                <td>@a.RelativeFrequency</td>
                            </tr>

                        }

                    </tbody>
                </table>
            </div>

        }
     }
    </div>



<script>
     var btnSubmit = document.getElementById("send");

    function handle(radio) {
        btnSubmit.click()
    }
    
    $(document).ready(function () {


        var frequencyChart = document.getElementById("frequencyChart");
        var medianChart = document.getElementById("medianChart");
        var meanChart = document.getElementById("meanChart");
        var frequencyButton = document.getElementById("frequencyButton");
        var medianButton = document.getElementById("medianButton");
        var meanButton = document.getElementById("meanButton");

        medianChart.style.display = "none";
        meanChart.style.display = "none";
        frequencyButton.disabled = true;

        $("#frequencyButton").click(function () {
            frequencyButton.disabled = true;
            medianButton.disabled = false;
            meanButton.disabled = false;
            frequencyChart.style.display = "block";
            medianChart.style.display = "none";
            meanChart.style.display = "none";
        });

        $("#medianButton").click(function () {
            frequencyButton.disabled = false;
            medianButton.disabled = true;
            meanButton.disabled = false;
            frequencyChart.style.display = "none";
            medianChart.style.display = "block";
            meanChart.style.display = "none";
        });

        $("#meanButton").click(function () {
            frequencyButton.disabled = false;
            medianButton.disabled = false;
            meanButton.disabled = true;
            frequencyChart.style.display = "none";
            medianChart.style.display = "none";
            meanChart.style.display = "block";
        });
    });


</script>

<style>
    .demo-section {
        text-align: center;
    }

    .box .k-textbox {
        margin: 0;
        width: 80px;
    }




</style>
