@{
    var processId = ViewData["processId"];
    string type = ViewData["type"] as string;
    IEnumerable<Pmviz_Frontend.Models.Activity> activities = ViewData["activities"] as IEnumerable<Pmviz_Frontend.Models.Activity>;
    string activityChosen = ViewData["activity"] as string;
    var moulds = ViewData["moulds"] as List<String>;
    var parts = ViewData["parts"] as List<String>;
    var meanMinutesAll = ViewData["meanMillis"];
    var totalEffort = ViewData["totalEffortMillis"];
    var allResources = ViewData["allResources"] as IEnumerable<Pmviz_Frontend.Models.ResourceStat>;
    var allResourcesEffort = ViewData["allResourcesEffort"] as IEnumerable<Pmviz_Frontend.Models.ResourceEffort>;


}
@{
    ViewData["Title"] = "Resources Statistics";
}

<h4 style="text-align:center">Resources Statistics</h4>
<div class="row">
    <div class="col-md-3 col-xl-3">
        <div class="card-box">
            <h4 class="text-dark my-1">Resources Statistics</h4>
            @if (ViewBag.ErrorActivity != null)
            {
                <div class="alert alert-danger" role="alert">
                    @ViewBag.ErrorActivity
                </div>
            }
            @if (activities != null)
            {
                <form method="post" action='@Url.Action("Resource", "Log", new { id = processId })'>
                @if (type == "mean")
                {
                    <input type="radio" name="type" value="mean" checked>
                }
                else
                {
                    <input type="radio" name="type" value="mean">

                }
                <label for="mean">Resources Mean Times</label>
                <br />
                @if (type == "effort")
                {
                    <input type="radio" name="type" value="effort" checked>
                }
                else
                {
                    <input type="radio" name="type" value="effort">
                }
                <label for="effort">Resources Effort</label>
                <br />

                <select name="activity" class="btn-sm btn-light dropdown-toggle" required>

                    @foreach (var act in activities)
                    {
                        if (activityChosen == act.Id.ToString())
                        {
                            <option value="@act.Id" selected>@act.Id - @act.Name</option>
                        }
                        else
                        {
                            <option value="@act.Id">@act.Id - @act.Name</option>
                        }
                    }


                </select>
                <br />
                <br />
                <div>
                    <button class="btn-xs btn-primary" type="submit">Submit</button>
                </div>
            </form>
            }
            else
            {
                <div>
                    <a href='@Url.Action("Index","Log")' class="btn btn-danger">Go Back</a>
                </div>
            }
        </div>
    </div>
    <div class="col">
        @if (ViewBag.Error != null)
        {
            <div class="alert alert-danger" role="alert">
                @ViewBag.Error
            </div>
            <div class="container" style="text-align:center">
                <a href='@Url.Action("Index","Log")' class="btn btn-danger">Go Back</a>
            </div>
        }
        else
        {
            @if ((type == "mean" || type == "effort") && (meanMinutesAll != null || totalEffort != null))
            {
                <div class="card-box">
                    @if (type == "mean")
                    {
                        <div>
                            @(Html.Kendo().Chart(allResources)
                                .Name("chart")
                                .Title("Mean time in minutes")
                                .Legend(legend => legend
                                    .Position(ChartLegendPosition.Top)
                                )
                                .Series(series =>
                                {
                                    series.Column(a => a.MeanMillis).Name("Mean in Minutes").CategoryField("Resource");
                                    series.Line(a => a.GeneralMean).Name("General Mean in Minutes");
                                })
                                .CategoryAxis(axis => axis
                                    .Name("series-axis")
                                    .Line(line => line.Visible(true))
                                )
                                .Tooltip(tooltip => tooltip
                                    .Visible(true)
                                    .Format("{0}%")
                                    .Template("#= series.name #: #= value # minutes")
                                )
                                .ChartArea(x => x.Height(210))
                                .Pannable(pannable => pannable
                                    .Lock(ChartAxisLock.Y)
                                )
                                .Zoomable(zoomable => zoomable
                                    .Mousewheel(mousewheel => mousewheel.Lock(ChartAxisLock.Y))
                                    .Selection(selection => selection.Lock(ChartAxisLock.Y))
                                )


                            )
                        </div>

                    }
                    else
                    {
                        <div>
                            @(Html.Kendo().Chart(allResourcesEffort)
                                .Name("chart")
                                .Title("Effort time in minutes")
                                .Legend(legend => legend
                                    .Position(ChartLegendPosition.Top)
                                )
                                .Series(series =>
                                {
                                    series.Column(a => a.EffortMillis).Name("Effort time Minutes").CategoryField("Resource");
                                })
                                .CategoryAxis(axis => axis
                                    .Name("series-axis")
                                    .Line(line => line.Visible(true))
                                )
                                .Tooltip(tooltip => tooltip
                                    .Visible(true)
                                    .Format("{0}%")
                                    .Template("#= series.name #: #= value # minutes")
                                )
                                .ChartArea(x => x.Height(210))
                                .Pannable(pannable => pannable
                                    .Lock(ChartAxisLock.Y)
                                )
                                .Zoomable(zoomable => zoomable
                                    .Mousewheel(mousewheel => mousewheel.Lock(ChartAxisLock.Y))
                                    .Selection(selection => selection.Lock(ChartAxisLock.Y))
                                )


                            )
                        </div>
                    }
                </div>
            }
        }
    </div>
</div>
<br />


@if ((type == "mean" || type == "effort") && (meanMinutesAll != null || totalEffort != null))
{
    <div class="row">
        <div class="col">
            <div class="card text-xs-center">
                <div class="card-header">
                    Information
                </div>
                <div class="card-body">
                    @if (type == "mean")
                    {
                        <h5>
                            General mean time: @meanMinutesAll minutes
                        </h5>
                    }
                    else
                    {
                        <h5>
                            Total Effort: @totalEffort minutes
                        </h5>
                    }
                    <h5>
                        Activity Chosen: @activityChosen
                    </h5>
                </div>
            </div> <!-- end card-box-->
        </div> <!-- end col -->
        <div class="col">
            <div class="card text-xs-center">
                <div class="card-header">
                    Parts
                </div>
                <div class="card-body">
                    @if (parts == null)
                    {
                        <h5>No parts were involved.</h5>
                    }
                    else
                    {
                        foreach (var p in parts)
                        {
                            <h5>@p</h5>
                        }
                    }
                </div>
                </div>
            </div>
        <div class="col">
            <div class="card text-xs-center">
                <div class="card-header">
                    Moulds
                </div>
                <div class="card-body">
                    @if (moulds == null)
                    {
                        <h5>No moulds were involved.</h5>
                    }
                    else
                    {
                        foreach (var m in moulds)
                        {
                            <h5>@m</h5>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
}



