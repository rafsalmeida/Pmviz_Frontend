@{
    ViewData["Title"] = "Diagram";
}
    <div>
        <div class="box wide">
            <div class="box-col">
                <h4>Layout: </h4>
                <select id="subtype">
                    <option value="down">Tree Down</option>
                    <option value="up">Tree Up</option>
                    <option value="tipover">Tipover Tree</option>
                </select>
            </div>
        </div>
        @(Html.Kendo().Diagram()
              .Name("diagram")
              .DataSource(dataSource => dataSource
                  .Read(read => read.Action("_Event", "Diagram"))
                      .Model(m => m.Children("Items"))
                  )
                  .Editable(false)
              .Layout(l => l
                .Type(DiagramLayoutType.Tree)
                .Subtype(DiagramLayoutSubtype.Down)
                .HorizontalSeparation(30)
                .VerticalSeparation(20)
            )
              .ShapeDefaults(sd => sd
                .Visual("visualTemplate")
            )
              .ConnectionDefaults(cd => cd
                  .Stroke(s => s
                      .Color("#979797")
                      .Width(2)
                  )
              )
              .Events(events => events.DataBound("onDataBound"))
        )
        @(Html.Kendo().Button()
        .Name("backButton")
        .HtmlAttributes(new { type = "button", @class = "k-primary" })
        .Content("Go back")
        .Events(e => e.Click("onClick_GoBack")))


    </div>

    <script>
    function onClick_GoBack() {
        window.location = '@Url.Action("Back", "Diagram")';
    }
    function visualTemplate(options) {
        var dataviz = kendo.dataviz;
        var g = new dataviz.diagram.Group();

        var dataItem = options.dataItem;
        g.append(new dataviz.diagram.Rectangle({
            width: 225,
            height: 50,
            stroke: {
                width: 0
            },
            fill: {
                gradient: {
                    type: "linear",
                    stops: [{
                        color: "#0099ff",
                        offset: 0,
                        opacity: 0.5
                    }, {
                        color: "#0099ff",
                        offset: 1,
                        opacity: 1
                    }]
                }
            }
        }));

        /*
        g.append(new dataviz.diagram.TextBlock({
            text: "Start" + dataItem.Start,
            x: 85,
            y: 5,
            color: "#fff"
        }));

        g.append(new dataviz.diagram.TextBlock({
            text: "End " + dataItem.End,
            x: 85,
            y: 25,
            color: "#fff"
        }));
        */
        g.append(new dataviz.diagram.TextBlock({
            text: "Duration " + dataItem.Duration + " min",
            x: 10,
            y: 5,
            color: "#fff"
        }));

        g.append(new dataviz.diagram.TextBlock({
            text: dataItem.Name,
            x: 130,
            y: 5,
            color: "#fff"
        }));

        return g;
    }

    function onDataBound() {
        this.bringIntoView(this.shapes);
    }

    $(document).ready(function () {
        $("#subtype").change(function () {
            $("#diagram").getKendoDiagram().layout({
                subtype: $(this).val(),
                type: "tree",
                horizontalSeparation: 30,
                verticalSeparation: 20
            });
        });
    });
    </script>

